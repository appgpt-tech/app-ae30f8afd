//Source code generated by AppGPT (www.appgpt.tech)
import { Admin, Resource, CustomRoutes } from 'react-admin';
import { customDataProvider } from './dataProvider';
import fakeDataProvider from 'ra-data-fakerest';
import { Dashboard } from './dashboard';
import { authProvider, apInitialize } from './authProvider';
import { i18nProvider } from './i18nProvider';
import LoginPage, { Login } from './Login';
import data from './data';
import {
  TransactionsList,
  TransactionsCreate,
  TransactionsEdit,
} from './resources/Transactions';
import {
  ExpensesList,
  ExpensesCreate,
  ExpensesEdit,
} from './resources/Expenses';
import { IncomesList, IncomesCreate, IncomesEdit } from './resources/Incomes';
import { ReportsList, ReportsCreate, ReportsEdit } from './resources/Reports';
import {
  RemindersList,
  RemindersCreate,
  RemindersEdit,
} from './resources/Reminders';
import { TasksList, TasksCreate, TasksEdit } from './resources/Tasks';
import { NotesList, NotesCreate, NotesEdit } from './resources/Notes';
import TransactionsIcon from '@mui/icons-material/AccountBalanceWallet';
import ExpensesIcon from '@mui/icons-material/ReceiptLong';
import IncomesIcon from '@mui/icons-material/AttachMoney';
import ReportsIcon from '@mui/icons-material/Assessment';
import RemindersIcon from '@mui/icons-material/NotificationsNone';
import TasksIcon from '@mui/icons-material/AssignmentTurnedIn';
import NotesIcon from '@mui/icons-material/Note';
// SUPERTOKENS
import React from 'react';
import SuperTokens, {
  SuperTokensWrapper,
  getSuperTokensRoutesForReactRouterDom,
} from 'supertokens-auth-react';
import ThirdPartyPasswordless from 'supertokens-auth-react/recipe/thirdpartypasswordless';
import Session from 'supertokens-auth-react/recipe/session';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import * as reactRouterDom from 'react-router-dom';
let sessionFn = Session.init();
SuperTokens.init({
  appInfo: {
    appName: import.meta.env.VITE_SUPERTOKENS_APPNAME,
    apiDomain: import.meta.env.VITE_BACKEND_DOMAIN,
    websiteDomain: import.meta.env.VITE_SUPERTOKENS_WEBSITEDOMAIN,
    apiBasePath: import.meta.env.VITE_BACKEND_APIPATH + '/auth',
    websiteBasePath: import.meta.env.VITE_SUPERTOKENS_WEBSITEBASEPATH,
  },
  recipeList: [
    ThirdPartyPasswordless.init({
      contactMethod: 'EMAIL',
      signInUpFeature: {
        providers: [
          ThirdPartyPasswordless.Github.init(),
          //ThirdPartyPasswordless.Google.init(),
          //ThirdPartyPasswordless.Facebook.init(),
          //ThirdPartyPasswordless.Apple.init(),
        ],
      },
    }),
    sessionFn,
  ],
});
apInitialize(Session);
// END SUPERTOKENS
let dataProvider: any;
if (import.meta.env.VITE_USE_BACKEND_DATA === 'true') {
  dataProvider = customDataProvider(
    import.meta.env.VITE_BACKEND_DOMAIN +
      import.meta.env.VITE_BACKEND_APIPATH +
      '/proxy',
  );
} else {
  dataProvider = fakeDataProvider(data.defaultData);
}

const App = () => (
  <SuperTokensWrapper>
    <BrowserRouter basename="/ae30f8afd">
      <Admin
        authProvider={
          import.meta.env.VITE_ENVIRONMENT != 'DEV' ? authProvider : undefined
        }
        requireAuth
        loginPage={LoginPage}
        dataProvider={dataProvider}
        i18nProvider={i18nProvider}
        dashboard={Dashboard}
      >
        <Resource
          name="Transactions"
          options={{ label: 'Transactions' }}
          list={TransactionsList}
          create={TransactionsCreate}
          edit={TransactionsEdit}
          recordRepresentation="id"
          icon={TransactionsIcon}
        />
        <Resource
          name="Expenses"
          options={{ label: 'Expenses' }}
          list={ExpensesList}
          create={ExpensesCreate}
          edit={ExpensesEdit}
          recordRepresentation="id"
          icon={ExpensesIcon}
        />
        <Resource
          name="Incomes"
          options={{ label: 'Incomes' }}
          list={IncomesList}
          create={IncomesCreate}
          edit={IncomesEdit}
          recordRepresentation="Amount"
          icon={IncomesIcon}
        />
        <Resource
          name="Reports"
          options={{ label: 'Reports' }}
          list={ReportsList}
          create={ReportsCreate}
          edit={ReportsEdit}
          recordRepresentation="id"
          icon={ReportsIcon}
        />
        <Resource
          name="Reminders"
          options={{ label: 'Reminders' }}
          list={RemindersList}
          create={RemindersCreate}
          edit={RemindersEdit}
          recordRepresentation="Title"
          icon={RemindersIcon}
        />
        <Resource
          name="Tasks"
          options={{ label: 'Tasks' }}
          list={TasksList}
          create={TasksCreate}
          edit={TasksEdit}
          recordRepresentation="Title"
          icon={TasksIcon}
        />
        <Resource
          name="Notes"
          options={{ label: 'Notes' }}
          list={NotesList}
          create={NotesCreate}
          edit={NotesEdit}
          recordRepresentation="title"
          icon={NotesIcon}
        />
        <CustomRoutes noLayout>
          {/*This renders the login UI on the /auth route*/}
          {getSuperTokensRoutesForReactRouterDom(reactRouterDom)}
          {/*Your app routes*/}
        </CustomRoutes>
      </Admin>
    </BrowserRouter>
  </SuperTokensWrapper>
);

export default App;
